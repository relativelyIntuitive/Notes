
1. What is the flow of information in a typical request, from when we type an address on our browser, to when we receive the response in our browser?

2. What are MVC and OOP? Why would we use each?

3. What is jQuery and why do we use it?

4. Consider a database with the following tables: users, friendships, where users includes id, name, and email, and friendships includes id, user_id, friend_id; If our friendships table includes a single association to confirm a friendship between two users, what is the QUERY to pull all of your non-friends?

5. What are some ways to make your website uniform across multiple browsers?

6. What are the differences between submitting a form via method="post" vs method="get"?

7. What are the advantages/disadvantages of sending data to the server in the url vs making a post request?

8. Why should we never render a page on a post request?

9. You notice that when you click submit on a form, your app breaks. Describe how you would approach debugging this problem.

10. What are a couple of security threats and how do we defend against them?

11. What is the difference between session, post, and cookies?

12. Explain why and when we use session.

13. What is an ORM and why do we use it? What are its advantages and disadvantages?

14. In your models, you may make a class User with the following code: class User(models.Model):. Why do we have models.Model inside the parentheses?

15. In your models, you may make a class UserManager with the following code: class UserManager(models.Manager):. Why do we have models.Manager inside the parentheses?

16. What is self and why does it appear in methods that we define in a class?

17. What is the __init__ method in a class?

18. Name 2 HTTP verbs and when would we use each.

19. What is RegEx and what do we use it for?

20. On large web applications, what are the benefits of using a framework?

21. What does a templating engine do for us?

22. What are 3 different type of database table relationships?

23. Why do we use routes and how do they work?

24. What is a virtual environment and why do we use it?

25. Explain what this code does: from flask import Flask

26. What is the importance of normalizing your database?

27. What is an API?

28. What is AJAX and why do we use it?

29. What is the difference between an HTTP request/response and an AJAX request/response?

30. What is the difference between client-side and server-side validations, and when do we use either or both?

31. What are the major differences between Flask and Django?

32. What are the differences between tuples, lists, and dictionaries?

33. What is data sterilization and why is it important?
